@model CategoriesWithProducts.UI.Models.DTO.ProductDto

@{
	ViewData["Title"] = Model.PageTitle;
	var categoryName = Model.Category?.Name ?? "Unknown Category";
	var categoryId = Model.CategoryId;
}

<div class="container mt-5">
	<div class="row">
		<div class="mt-4">
			<a asp-controller="Product" asp-action="Index" asp-route-id="@categoryId" class="btn btn-outline-primary d-inline-flex align-items-center gap-2 shadow-sm mb-3" style="font-size: 1.2rem; text-decoration: none;">
				<i class="bi bi-arrow-left"></i>
				<span>Return to <strong>@categoryName</strong></span>
			</a>
		</div>
		<div class="col-md-6 text-center">
			<div class="card p-3 shadow-sm">
				<img src="@Model.ProductImageUrl" alt="@Model.Name" class="img-fluid" style="max-height: 400px; object-fit: scale-down;" />
			</div>
		</div>
		<div class="col-md-6">
			<div class="card p-4 shadow-sm">
				<h2 class="mb-3">@Model.Name</h2>
				<h4 class="text-success mt-2">@Model.Price ₺</h4>

				<form asp-controller="Cart" asp-action="AddToCart" method="post" class="mt-4 d-flex flex-column gap-3">
					<input type="hidden" name="ProductId" value="@Model.Id" />
					<input type="hidden" name="ProductName" value="@Model.Name" />
					<input type="hidden" name="ProductImageUrl" value="@Model.ProductImageUrl" />
					<input type="hidden" name="ProductPrice" value="@Model.Price" />

					<div class="d-flex align-items-center gap-2">
						<button type="button" class="btn btn-outline-secondary quantity-minus">-</button>
						<input type="number" name="Quantity" value="1" min="1" class="form-control quantity-input text-center" style="width: 80px;" />
						<button type="button" class="btn btn-outline-secondary quantity-plus">+</button>
					</div>

					<button class="btn btn-success w-100 mt-2"><i class="bi bi-cart-plus me-2"></i>Add to Cart</button>
				</form>
			</div>
		</div>
	</div>

	@if (Model.Content != null)
	{
		<div class="row mt-5">
			<div class="col-12">
				<div class="card shadow-sm p-4">
					<h4 class="mb-3">Product Description</h4>
					<div>@Html.Raw(Model.Content)</div>
				</div>
			</div>
		</div>
	}
</div>

@section Scripts {
	<script>
		$(document).ready(function () {
			$('.quantity-minus').click(function () {
				let input = $(this).siblings('.quantity-input');
				let current = parseInt(input.val());
				if (current > 1) {
					input.val(current - 1);
				}
			});

			$('.quantity-plus').click(function () {
				let input = $(this).siblings('.quantity-input');
				input.val(parseInt(input.val()) + 1);
			});
		});
	</script>
}
