@using CategoriesWithProducts.UI.Models.DTO
@model List<CategoriesWithProducts.UI.Models.DTO.ProductDto>

@{
    ViewData["Title"] = "All Products";

    var currentPage = Convert.ToInt32(ViewBag.CurrentPage ?? 1);
    var totalPages = Convert.ToInt32(ViewBag.TotalPages ?? 1);

    var currentFilterQuery = ViewBag.CurrentFilterQuery as string ?? "";
    var currentMinValue = ViewBag.CurrentMinValue as decimal? ?? null;
    var currentMaxValue = ViewBag.CurrentMaxValue as decimal? ?? null;
    var currentSortBy = ViewBag.CurrentSortBy as string ?? "";
    var currentIsAscending = ViewBag.CurrentIsAscending as bool? ?? true;
}

<div class="container mt-5">
    <h2>All Products</h2>

    <div class="row">
        <!-- Sol Filtre Paneli -->
        <div class="col-md-3">
            <form method="get" asp-action="ShowAllProducts">
                <input type="hidden" name="sortBy" value="@currentSortBy" />
                <input type="hidden" name="isAscending" value="@currentIsAscending" />

                <div class="mb-3">
                    <label>Search</label>
                    <input type="text" name="filterQuery" class="form-control" value="@currentFilterQuery" />
                </div>
                <div class="mb-3">
                    <label>Min Price</label>
                    <input type="number" step="0.01" name="minValue" class="form-control" value="@currentMinValue" />
                </div>
                <div class="mb-3">
                    <label>Max Price</label>
                    <input type="number" step="0.01" name="maxValue" class="form-control" value="@currentMaxValue" />
                </div>
                <button type="submit" class="btn btn-primary w-100">Filter</button>
            </form>
        </div>

        <!-- Ürün Listesi -->
        <div class="col-md-9">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <span>@ViewBag.ActiveFilter</span>
                <form method="get" asp-action="ShowAllProducts" class="d-flex">
                    <input type="hidden" name="filterQuery" value="@currentFilterQuery" />
                    <input type="hidden" name="minValue" value="@currentMinValue" />
                    <input type="hidden" name="maxValue" value="@currentMaxValue" />

                    <select name="sortBy" class="form-select w-auto me-2" onchange="this.form.submit()">
                        <option value="">Sort By</option>
                        <option value="Name" selected="@(currentSortBy == "Name")">Name</option>
                        <option value="Price" selected="@(currentSortBy == "Price")">Price</option>
                    </select>
                    <select name="isAscending" class="form-select" onchange="this.form.submit()">
                        <option value="true" selected="@(currentIsAscending ? "selected" : null)">Asc</option>
                        <option value="false" selected="@(currentIsAscending ? null : "selected")">Desc</option>
                    </select>
                </form>
            </div>
            @if (Model == null || Model.Count == 0)
            {
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    No products found
                    @if (!string.IsNullOrEmpty(currentFilterQuery))
                    {
                        @: with name containing "<strong>@currentFilterQuery</strong>"
                    }
                    @if (currentMinValue.HasValue || currentMaxValue.HasValue)
                    {
                        @: in the price range
                        @if (currentMinValue.HasValue)
                        {
                            @: ₺@currentMinValue.Value
                        }
                        @if (currentMinValue.HasValue && currentMaxValue.HasValue)
                        {
                            @: -
                        }
                        @if (currentMaxValue.HasValue)
                        {
                            @: ₺@currentMaxValue.Value
                        }
                    }
                    .
                    <a href="@Url.Action("ShowAllProducts")" class="btn btn-sm btn-outline-secondary ms-2">Reset Filters</a>
                </div>
            }
            else
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Price (₺)</th>
                            <th>Add to Cart</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                            <tr>
                                <td><img src="@product.ProductImageUrl" width="100" height="100" style="object-fit: scale-down;" /></td>
                                <td>@product.Name</td>
                                <td>@product.Price</td>
                                <td>
                                    <form asp-controller="Cart" asp-action="AddToCart" method="post" class="d-flex align-items-center gap-2">
                                        <input type="hidden" name="ProductId" value="@product.Id" />
                                        <input type="hidden" name="ProductName" value="@product.Name" />
                                        <input type="hidden" name="ProductImageUrl" value="@product.ProductImageUrl" />
                                        <input type="hidden" name="ProductPrice" value="@product.Price" />
                                        <input type="number" name="Quantity" value="1" min="1" class="form-control" style="width: 60px;" />
                                        <button type="submit" class="btn btn-success">Add to Cart</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <!-- Sayfalama -->
                <nav>
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(currentPage <= 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("ShowAllProducts", new { pageNumber = currentPage - 1, filterQuery = currentFilterQuery, minValue = currentMinValue, maxValue = currentMaxValue, sortBy = currentSortBy, isAscending = currentIsAscending })">Previous</a>
                        </li>

                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("ShowAllProducts", new { pageNumber = i, filterQuery = currentFilterQuery, minValue = currentMinValue, maxValue = currentMaxValue, sortBy = currentSortBy, isAscending = currentIsAscending })">@i</a>
                            </li>
                        }

                        <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("ShowAllProducts", new { pageNumber = currentPage + 1, filterQuery = currentFilterQuery, minValue = currentMinValue, maxValue = currentMaxValue, sortBy = currentSortBy, isAscending = currentIsAscending })">Next</a>
                        </li>
                    </ul>
                </nav>
            }
            
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.quantity-input').on('input', function () {
                let input = $(this);
                let quantity = parseInt(input.val());
                if (isNaN(quantity) || quantity < 1) quantity = 1;
                input.val(quantity);

                let price = parseFloat(input.closest('tr').find('td:nth-child(3)').text());
                input.closest('tr').find('.total-price').text((price * quantity).toFixed(2));
            });
        });
    </script>
}
