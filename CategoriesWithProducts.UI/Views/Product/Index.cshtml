@model List<CategoriesWithProducts.UI.Models.DTO.ProductDto>


@{
	var categoryName = Model.FirstOrDefault()?.Category?.Name ?? "Unknown Category";
	var categoryId = ViewBag.CategoryId ?? 0;
	var contentImageUrl = ViewBag.ImageUrl;
	var activeFilter = ViewBag.ActiveFilter;
}


<div class="container mt-5">
	<h1>Products for @categoryName</h1>
	@if ((User.IsInRole("Admin") || User.IsInRole("Writer")))
	{
		<button class="btn btn-primary mb-2" id="btnAddProduct" data-category-id="@ViewBag.CategoryId">
			Add Product
		</button>
	}
	@if (!string.IsNullOrEmpty(activeFilter))
	{
		<div class="mb-3">
			<div class="alert alert-secondary d-flex align-items-center" role="alert">
				<i class="bi bi-filter me-2"></i>
				<div>@activeFilter</div>
			</div>
		</div>
	}

	<table class="table table-bordered">
		<thead>
			<tr>
				<th width="125">Image of Product</th>
				<th>Name</th>
				<th>Price</th>
				@if ((User.IsInRole("Admin") || User.IsInRole("Writer")))
				{
					<th>Operations</th>
				}

				<th>Add To Cart</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var product in Model)
			{
				<tr>
					<td>
						<a asp-controller="Product" asp-action="SelectedProduct" asp-route-id="@product.Id">
							<img src="@product.ProductImageUrl" alt="Product Image" width="100" height="100" style="object-fit: scale-down;" />
						</a>
					</td>

					<td>
						<a asp-controller="Product" asp-action="SelectedProduct" asp-route-id="@product.Id"
						   class="btn btn-light">@product.Name</a>
					</td>

					<td><span class="unit-price">@product.Price</span> ₺</td>
					@if ((User.IsInRole("Admin") || User.IsInRole("Writer")))
					{

						<td>
							<button class="btn btn-success btnEdit mb-2" data-id="@product.Id">Edit</button>
							<button class="btn btn-danger btnDelete mb-2" data-id="@product.Id">Delete</button>
						</td>
					}
					<td>
						<form asp-controller="Cart" asp-action="AddToCart" method="post" class="d-flex align-items-center gap-2">
							<input type="hidden" name="ProductId" value="@product.Id" />
							<input type="hidden" name="ProductName" value="@product.Name" />
							<input type="hidden" name="ProductImageUrl" value="@product.ProductImageUrl" readonly />
							<input type="hidden" name="ProductPrice" value="@product.Price" />

							<button type="button" class="btn btn-outline-secondary quantity-minus">-</button>
							<input type="number" name="Quantity" value="1" min="1" class="form-control quantity-input" style="width: 60px;" />
							<button type="button" class="btn btn-outline-secondary quantity-plus">+</button>

							<button class="btn btn-success w-100 mt-2"><i class="bi bi-cart-plus me-2"></i>Add to Cart</button>
						</form>
					</td>


					<td>
						<small>Total: <span class="total-price">@product.Price</span> ₺</small>
					</td>

				</tr>
			}
		</tbody>
	</table>
</div>


<div class="modal fade" id="productModal" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Product Add/Edit</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>
			<div class="modal-body">
				<form id="productForm">
					<input type="hidden" id="categoryId" value="@ViewBag.CategoryId" />
					<input type="hidden" id="productId">
					<div class="mb-3">
						<label for="productName" class="form-label">Product Name</label>
						<input type="text" id="productName" class="form-control" required>
					</div>

					<div class="mb-3">
						<label for="productPageTitle" class="form-label">Product Page Title</label>
						<input type="text" id="productPageTitle" class="form-control">
					</div>

					<div class="mb-3">
						<label for="productContent" class="form-label">Product Content</label>
						<textarea id="productContent" class="form-control" rows="4"></textarea>
					</div>

					<div class="mb-3">
						<label for="productPrice" class="form-label">Product Price</label>
						<input type="text" id="productPrice" class="form-control" required>
					</div>

					<div class="mb-3">
						<label class="form-label">Featured Image Upload</label>
						<input type="file" id="featuredImageUpload" class="form-control mb-2" />

						<img src="" id="featuredImageDisplay" style="display:none;width:300px;" />
					</div>

					<div class="mb-3">
						<label for="productImageUrl" class="form-label">Featured Image URL</label>
						<input type="text" class="form-control" id="productImageUrl" />
					</div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				<button type="button" id="saveProduct" class="btn btn-primary">Save</button>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/froala-editor@4.0.12/js/froala_editor.pkgd.min.js"></script>
	<link href="https://cdn.jsdelivr.net/npm/froala-editor@4.0.12/css/froala_editor.pkgd.min.css" rel="stylesheet" />


	<script>
					let editor;

		$(document).ready(function () {
			editor = new FroalaEditor('#productContent', {
				imageUploadURL: 'https://localhost:7287/api/Images2/cloudinary-image',
				imageUploadParams: { id: 'my_editor_image' },
				imageUploadMethod: 'POST',
				imageAllowedTypes: ['jpeg', 'jpg', 'png', 'gif'],
				imageMaxSize: 5 * 1024 * 1024,
				events: {
					'image.error': function (error) {
						console.error('Froala image upload error:', error);
						toastr.error("Görsel yüklenemedi.");
					}
				}
			});
			// Ürün ekleme modalı açılırken alanları temizle
			$('#btnAddProduct').click(function () {
				let categoryId = $(this).data('category-id');
				$('#categoryId').val(categoryId);
				$('#productId').val('');
				$('#productName').val('');
				$('#productPrice').val('');
				$('#productImageUrl').val('');
				$('#productPageTitle').val('');
				editor.html.set('');
				$('#featuredImageDisplay').hide();
				$('#productModal').modal('show');
			});

			// Ürün düzenle
			$('.btnEdit').click(function () {
				let id = $(this).data('id');
				$.ajax({
					url: `/Product/EditProduct/${id}`,
					type: 'GET',
					success: function (data) {
						$('#productId').val(data.id);
						$('#productName').val(data.name);
						$('#productPrice').val(data.price);
						$('#productImageUrl').val(data.productImageUrl);
						$('#productPageTitle').val(data.pageTitle || '');
						editor.html.set(data.content || '');


						if (data.productImageUrl) {
							$('#featuredImageDisplay').attr('src', data.productImageUrl).show();
						} else {
							$('#featuredImageDisplay').hide();
						}

						$('#productModal').modal('show');
					},
					error: function () {
						toastr.error("Couldn't access product information!");
					}
				});
			});

			// Ürün sil
			$('.btnDelete').click(function () {
				let id = $(this).data('id');
				if (confirm("Are you sure to delete this product?")) {
					$.ajax({
						url: `/Product/DeleteProduct/${id}`,
						type: 'POST',
						success: function (response) {
							if (response.success) {
								toastr.success("Product deleted successfully.");
								location.reload();
							} else {
								toastr.error("Product couldn't be deleted.");
							}
						},
						events: {
							'image.error': function (error, response) {
							console.error('Froala image upload error:', error, response);
							toastr.error("Görsel yüklenemedi: " + (error.message || "Bilinmeyen hata"));
							}
						}
					});
				}
			});

			// Ürün kaydet
			$('#saveProduct').click(function () {
				let content = editor.html.get();
				let data = {
					CategoryId: $('#categoryId').val(),
					Id: $('#productId').val(),
					Name: $('#productName').val(),
					ProductImageUrl: $('#productImageUrl').val(),
					Price: $('#productPrice').val(),
					PageTitle: $('#productPageTitle').val(),
					Content: content
				};

				let url = data.Id ? '/Product/EditProduct' : '/Product/AddProduct';

				$.ajax({
					url: url,
					type: 'POST',
					contentType: 'application/json',
					data: JSON.stringify(data),
					success: function (response) {
						if (response.success) {
							toastr.success("Product saved successfully.");
							$('#productModal').modal('hide');
							location.reload();
						} else {
							toastr.error("Product couldn't be saved!");
						}
					},
					error: function () {
						toastr.error("There is an error in the process!");
					}
				});
			});

			// Manşet görsel yüklemesi (Froala dışında)
			$('#featuredImageUpload').change(function () {
				let fileInput = this.files[0];
				let formData = new FormData();
				formData.append('File', fileInput);

				$.ajax({
					url: '/Images/UploadImage',
					type: 'POST',
					data: formData,
					contentType: false,
					processData: false,
					success: function (response) {
						if (response.success) {
							$('#productImageUrl').val(response.imageUrl);
							$('#featuredImageDisplay').attr('src', response.imageUrl).show();
							toastr.success("Image uploaded successfully!");
						} else {
							toastr.error(response.message || "Image upload failed.");
						}
					},
					error: function () {
						toastr.error("Server error during image upload.");
					}
				});
			});

			// Quantity işlemleri
			$('.quantity-minus').click(function () {
				let input = $(this).siblings('.quantity-input');
				let current = parseInt(input.val());
				if (current > 1) {
					input.val(current - 1);
					updateTotalPrice(input);
				}
			});
			$('.quantity-plus').click(function () {
				let input = $(this).siblings('.quantity-input');
				input.val(parseInt(input.val()) + 1);
				updateTotalPrice(input);
			});
			function updateTotalPrice(quantityInput) {
				let row = quantityInput.closest('tr');
				let unitPrice = parseFloat(row.find('.unit-price').text());
				let quantity = parseInt(quantityInput.val());
				let total = unitPrice * quantity;
				row.find('.total-price').text(total.toFixed(2));
			}
		});
	</script>
}